{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathons\\\\health-carrd-doctor\\\\src\\\\Components\\\\Dashboard\\\\dashboardSections.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Patient from \"./patient\";\nimport QRSection from \"./qrcode\";\nimport { useState } from \"react\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardSection = ({\n  name,\n  image\n}) => {\n  _s();\n\n  let {\n    uid\n  } = useParams();\n  const colRef = doc(db, \"user\", uid);\n  const colRef2 = doc(db, \"doctors\", \"qQr7J8vNTYRxvle1C8h3aZJXBkF3\");\n  const [data, setData] = useState(\"\");\n  const [dataDoctors, setDataDoctors] = useState(\"\");\n  const [load, setLoad] = useState(true); //const q=query(colRef,where)\n\n  const getDoctorsData = () => {\n    setDataDoctors(\"\");\n    getDoc(colRef2).then(doc => {\n      setDataDoctors(doc.data());\n      console.log(doc.data());\n      setLoad(false);\n    });\n  };\n\n  const resetData = () => {\n    setData(\"\");\n    getDoc(colRef).then(doc => {\n      setData(doc.data());\n      getDoctorsData();\n    });\n  };\n\n  useEffect(() => {\n    resetData();\n  }, [uid]);\n  const [btn, setBtn] = useState(1); //Selected button from the Prescriptions, Test Results, Predictions btns\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-section p-10 flex flex-col lg:grid lg:grid-cols-3 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section__sec1 flex flex-col col-span-2 p-11  m-8 h-full bg-white rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section__sec1__btnholder mt-10  \",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setBtn(1);\n          },\n          className: btn === 1 ? \"p-4 rounded btn-active font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\" : \"p-4 rounded btn font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\",\n          children: \"Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setBtn(2);\n          },\n          className: btn === 2 ? \"p-4 ml-4 rounded btn-active font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\" : \"p-4   ml-4 rounded btn font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\",\n          children: \"All Patients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), btn === 1 ? /*#__PURE__*/_jsxDEV(Patient, {\n        load: load,\n        data: data.prescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this) : \"\", btn === 2 ? \"\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section__sec2 \",\n      children: /*#__PURE__*/_jsxDEV(QRSection, {\n        name: name,\n        image: image,\n        uid: uid,\n        resetData: resetData,\n        data: dataDoctors.personaldata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardSection, \"BOrxmK6P3QkavHDCYEe3FTGu0Ow=\", false, function () {\n  return [useParams];\n});\n\n_c = DashboardSection;\nexport default DashboardSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardSection\");","map":{"version":3,"sources":["D:/Hackathons/health-carrd-doctor/src/Components/Dashboard/dashboardSections.js"],"names":["React","useEffect","Patient","QRSection","useState","getDoc","doc","db","useParams","DashboardSection","name","image","uid","colRef","colRef2","data","setData","dataDoctors","setDataDoctors","load","setLoad","getDoctorsData","then","console","log","resetData","btn","setBtn","prescription","personaldata"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Patient from \"./patient\";\r\nimport QRSection from \"./qrcode\";\r\nimport { useState } from \"react\";\r\nimport { getDoc, doc } from \"firebase/firestore\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst DashboardSection = ({ name, image }) => {\r\n  let { uid } = useParams();\r\n  const colRef = doc(db, \"user\", uid);\r\n  const colRef2 = doc(db, \"doctors\", \"qQr7J8vNTYRxvle1C8h3aZJXBkF3\");\r\n  const [data, setData] = useState(\"\");\r\n  const [dataDoctors, setDataDoctors] = useState(\"\");\r\n  const [load, setLoad] = useState(true);\r\n\r\n  //const q=query(colRef,where)\r\n  const getDoctorsData = () => {\r\n    setDataDoctors(\"\");\r\n    getDoc(colRef2).then((doc) => {\r\n      setDataDoctors(doc.data());\r\n      console.log(doc.data());\r\n      setLoad(false);\r\n    });\r\n  };\r\n  const resetData = () => {\r\n    setData(\"\");\r\n    getDoc(colRef).then((doc) => {\r\n      setData(doc.data());\r\n      getDoctorsData();\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    resetData();\r\n  }, [uid]);\r\n\r\n  const [btn, setBtn] = useState(1);\r\n  //Selected button from the Prescriptions, Test Results, Predictions btns\r\n  return (\r\n    <div className=\"dashboard-section p-10 flex flex-col lg:grid lg:grid-cols-3 relative\">\r\n      <div className=\"dashboard-section__sec1 flex flex-col col-span-2 p-11  m-8 h-full bg-white rounded\">\r\n        <div className=\"dashboard-section__sec1__btnholder mt-10  \">\r\n          <button\r\n            onClick={() => {\r\n              setBtn(1);\r\n            }}\r\n            className={\r\n              btn === 1\r\n                ? \"p-4 rounded btn-active font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\"\r\n                : \"p-4 rounded btn font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\"\r\n            }\r\n          >\r\n            Patient\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setBtn(2);\r\n            }}\r\n            className={\r\n              btn === 2\r\n                ? \"p-4 ml-4 rounded btn-active font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\"\r\n                : \"p-4   ml-4 rounded btn font-medium pl-7 pr-7 text-2xl tracking-tight\tbg-blue-50\"\r\n            }\r\n          >\r\n            All Patients\r\n          </button>\r\n        </div>\r\n        {btn === 1 ? <Patient load={load} data={data.prescription} /> : \"\"}\r\n        {btn === 2 ? \"\" : \"\"}\r\n      </div>\r\n      <div className=\"dashboard-section__sec2 \">\r\n        <QRSection\r\n          name={name}\r\n          image={image}\r\n          uid={uid}\r\n          resetData={resetData}\r\n          data={dataDoctors.personaldata}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSection;\r\n"]},"metadata":{},"sourceType":"module"}