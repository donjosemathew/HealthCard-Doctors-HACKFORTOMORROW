{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathons\\\\health-carrd\\\\src\\\\context\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { provider, auth } from \"../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextprovider = props => {\n  _s();\n\n  const name = \"ji\";\n  const [user, setUser] = useState(\"\"); ///////////SignIn\n\n  const SignIn = () => {\n    signInWithPopup(auth, provider).then(result => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      setUser({\n        name: \"sds\"\n      });\n      console.log(result.user);\n    }).catch(error => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      name: name,\n      SignIn\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextprovider, \"O8A1O7ueRI69RLawqs90Wgk1R68=\");\n\n_c = AuthContextprovider;\nexport default AuthContextprovider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextprovider\");","map":{"version":3,"sources":["D:/Hackathons/health-carrd/src/context/auth.js"],"names":["React","createContext","useEffect","useState","signInWithPopup","GoogleAuthProvider","provider","auth","AuthContext","AuthContextprovider","props","name","user","setUser","SignIn","then","result","credential","credentialFromResult","token","accessToken","console","log","catch","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,eAApD;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,sBAA/B;;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;;AAEP,MAAMQ,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,IAAI,GAAG,IAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAFqC,CAGrC;;AACA,QAAMW,MAAM,GAAG,MAAM;AACnBV,IAAAA,eAAe,CAACG,IAAD,EAAOD,QAAP,CAAf,CACGS,IADH,CACSC,MAAD,IAAY;AAChB,YAAMC,UAAU,GAAGZ,kBAAkB,CAACa,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB;AACAP,MAAAA,OAAO,CAAC;AACNF,QAAAA,IAAI,EAAE;AADA,OAAD,CAAP;AAGAU,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACJ,IAAnB;AACD,KARH,EASGW,KATH,CASUC,KAAD,IAAW,CAAE,CATtB;AAUD,GAXD;;AAYA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,IAAI,EAAEA,IADD;AAELG,MAAAA;AAFK,KADT;AAAA,cAMGJ,KAAK,CAACe;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1BD;;GAAMhB,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { provider, auth } from \"../firebase/firebase\";\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextprovider = (props) => {\r\n  const name = \"ji\";\r\n  const [user, setUser] = useState(\"\");\r\n  ///////////SignIn\r\n  const SignIn = () => {\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        setUser({\r\n          name: \"sds\",\r\n        });\r\n        console.log(result.user);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        name: name,\r\n        SignIn,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextprovider;\r\n"]},"metadata":{},"sourceType":"module"}