{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathons\\\\health-carrd\\\\src\\\\context\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\nimport { provider, auth } from \"../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextprovider = props => {\n  _s();\n\n  const name = \"ji\";\n  const [user, setUser] = useState(\"\");\n  const [load, loading] = useState(true); ///////Current User\n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser({\n          name: user.displayName,\n          email: user.email,\n          phonenum: user.phoneNumber,\n          photo: user.photoURL\n        });\n        console.log(\"Olged\", user); // ...\n      } else {// User is signed out\n          // ...\n        }\n    });\n  }); ///////////SignIn\n\n  const SignIn = () => {\n    signInWithPopup(auth, provider).then(result => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      setUser({\n        name: result.user.displayName,\n        email: result.user.email,\n        phonenum: result.user.phoneNumber,\n        photo: result.user.photoURL\n      });\n      console.log(result.user.displayName);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: user,\n      SignIn\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextprovider, \"Lc7woXJ9JUmc44gTFGwyr6Ca618=\");\n\n_c = AuthContextprovider;\nexport default AuthContextprovider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextprovider\");","map":{"version":3,"sources":["D:/Hackathons/health-carrd/src/context/auth.js"],"names":["React","createContext","useEffect","useState","signInWithPopup","GoogleAuthProvider","onAuthStateChanged","provider","auth","AuthContext","AuthContextprovider","props","name","user","setUser","load","loading","displayName","email","phonenum","phoneNumber","photo","photoURL","console","log","SignIn","then","result","credential","credentialFromResult","token","accessToken","catch","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,eAJP;AAKA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,sBAA/B;;AACA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,EAAjC;;AAEP,MAAMS,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,IAAI,GAAG,IAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC,CAHqC,CAIrC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,kBAAkB,CAACE,IAAD,EAAQK,IAAD,IAAU;AACjC,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAAC;AACNF,UAAAA,IAAI,EAAEC,IAAI,CAACI,WADL;AAENC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAFN;AAGNC,UAAAA,QAAQ,EAAEN,IAAI,CAACO,WAHT;AAINC,UAAAA,KAAK,EAAER,IAAI,CAACS;AAJN,SAAD,CAAP;AAMAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,IAArB,EAPQ,CAQR;AACD,OATD,MASO,CACL;AACA;AACD;AACF,KAdiB,CAAlB;AAeD,GAhBQ,CAAT,CALqC,CAuBrC;;AACA,QAAMY,MAAM,GAAG,MAAM;AACnBrB,IAAAA,eAAe,CAACI,IAAD,EAAOD,QAAP,CAAf,CACGmB,IADH,CACSC,MAAD,IAAY;AAChB,YAAMC,UAAU,GAAGvB,kBAAkB,CAACwB,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB;AACAjB,MAAAA,OAAO,CAAC;AACNF,QAAAA,IAAI,EAAEe,MAAM,CAACd,IAAP,CAAYI,WADZ;AAENC,QAAAA,KAAK,EAAES,MAAM,CAACd,IAAP,CAAYK,KAFb;AAGNC,QAAAA,QAAQ,EAAEQ,MAAM,CAACd,IAAP,CAAYO,WAHhB;AAINC,QAAAA,KAAK,EAAEM,MAAM,CAACd,IAAP,CAAYS;AAJb,OAAD,CAAP;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACd,IAAP,CAAYI,WAAxB;AACD,KAXH,EAYGe,KAZH,CAYUC,KAAD,IAAW;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,KAdH;AAeD,GAhBD;;AAiBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,IAAI,EAAEA,IADD;AAELY,MAAAA;AAFK,KADT;AAAA,cAMGd,KAAK,CAACuB;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnDD;;GAAMxB,mB;;KAAAA,mB;AAqDN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { provider, auth } from \"../firebase/firebase\";\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextprovider = (props) => {\r\n  const name = \"ji\";\r\n  const [user, setUser] = useState(\"\");\r\n  const [load, loading] = useState(true);\r\n  ///////Current User\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser({\r\n          name: user.displayName,\r\n          email: user.email,\r\n          phonenum: user.phoneNumber,\r\n          photo: user.photoURL,\r\n        });\r\n        console.log(\"Olged\", user);\r\n        // ...\r\n      } else {\r\n        // User is signed out\r\n        // ...\r\n      }\r\n    });\r\n  });\r\n\r\n  ///////////SignIn\r\n  const SignIn = () => {\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        setUser({\r\n          name: result.user.displayName,\r\n          email: result.user.email,\r\n          phonenum: result.user.phoneNumber,\r\n          photo: result.user.photoURL,\r\n        });\r\n        console.log(result.user.displayName);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: user,\r\n        SignIn,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextprovider;\r\n"]},"metadata":{},"sourceType":"module"}