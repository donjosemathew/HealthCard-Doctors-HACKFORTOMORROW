{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackathons\\\\health-carrd\\\\src\\\\context\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { signInWithPopup, GoogleAuthProvider, onAuthStateChanged } from \"firebase/auth\";\nimport { provider, auth } from \"../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextprovider = props => {\n  _s();\n\n  const name = \"ji\";\n  const [user, setUser] = useState(\"\"); ///////Current User\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      const uid = user.uid; // ...\n    } else {// User is signed out\n        // ...\n      }\n  }); ///////////SignIn\n\n  const SignIn = () => {\n    signInWithPopup(auth, provider).then(result => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      setUser({\n        name: result.user.displayName,\n        email: result.user.email,\n        phonenum: result.user.phoneNumber,\n        photo: result.user.photoURL\n      });\n      console.log(result.user.displayName);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: user,\n      SignIn\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextprovider, \"O8A1O7ueRI69RLawqs90Wgk1R68=\");\n\n_c = AuthContextprovider;\nexport default AuthContextprovider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextprovider\");","map":{"version":3,"sources":["D:/Hackathons/health-carrd/src/context/auth.js"],"names":["React","createContext","useEffect","useState","signInWithPopup","GoogleAuthProvider","onAuthStateChanged","provider","auth","AuthContext","AuthContextprovider","props","name","user","setUser","uid","SignIn","then","result","credential","credentialFromResult","token","accessToken","displayName","email","phonenum","phoneNumber","photo","photoURL","console","log","catch","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,eAJP;AAKA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,sBAA/B;;AACA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,EAAjC;;AAEP,MAAMS,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAMC,IAAI,GAAG,IAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC,CAFqC,CAGrC;;AACAG,EAAAA,kBAAkB,CAACE,IAAD,EAAQK,IAAD,IAAU;AACjC,QAAIA,IAAJ,EAAU;AACR;AACA;AACA,YAAME,GAAG,GAAGF,IAAI,CAACE,GAAjB,CAHQ,CAIR;AACD,KALD,MAKO,CACL;AACA;AACD;AACF,GAViB,CAAlB,CAJqC,CAerC;;AACA,QAAMC,MAAM,GAAG,MAAM;AACnBZ,IAAAA,eAAe,CAACI,IAAD,EAAOD,QAAP,CAAf,CACGU,IADH,CACSC,MAAD,IAAY;AAChB,YAAMC,UAAU,GAAGd,kBAAkB,CAACe,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB;AACAR,MAAAA,OAAO,CAAC;AACNF,QAAAA,IAAI,EAAEM,MAAM,CAACL,IAAP,CAAYU,WADZ;AAENC,QAAAA,KAAK,EAAEN,MAAM,CAACL,IAAP,CAAYW,KAFb;AAGNC,QAAAA,QAAQ,EAAEP,MAAM,CAACL,IAAP,CAAYa,WAHhB;AAINC,QAAAA,KAAK,EAAET,MAAM,CAACL,IAAP,CAAYe;AAJb,OAAD,CAAP;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACL,IAAP,CAAYU,WAAxB;AACD,KAXH,EAYGQ,KAZH,CAYUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAdH;AAeD,GAhBD;;AAiBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLnB,MAAAA,IAAI,EAAEA,IADD;AAELG,MAAAA;AAFK,KADT;AAAA,cAMGL,KAAK,CAACsB;AANT;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3CD;;GAAMvB,mB;;KAAAA,mB;AA6CN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { provider, auth } from \"../firebase/firebase\";\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextprovider = (props) => {\r\n  const name = \"ji\";\r\n  const [user, setUser] = useState(\"\");\r\n  ///////Current User\r\n  onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      // User is signed in, see docs for a list of available properties\r\n      // https://firebase.google.com/docs/reference/js/firebase.User\r\n      const uid = user.uid;\r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      // ...\r\n    }\r\n  });\r\n  ///////////SignIn\r\n  const SignIn = () => {\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        const token = credential.accessToken;\r\n        setUser({\r\n          name: result.user.displayName,\r\n          email: result.user.email,\r\n          phonenum: result.user.phoneNumber,\r\n          photo: result.user.photoURL,\r\n        });\r\n        console.log(result.user.displayName);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: user,\r\n        SignIn,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextprovider;\r\n"]},"metadata":{},"sourceType":"module"}